// Generated by https://quicktype.io

export interface EnebaResult {
    data: Data;
    extensions: Extensions;
}

export interface Data {
    search: Search;
    breadcrumbs: any[];
    regions: Region[];
    Content_accessRule: null;
}

export interface Region {
    name: string;
    code: string;
    __typename: RegionTypename;
}

export enum RegionTypename {
    ProductRegion = "ProductRegion",
    StoreRegion = "StoreRegion",
}

export interface Search {
    filters: Filter[];
    results: Results;
    __typename: string;
}

export interface Filter {
    title: string;
    slug: string;
    __typename: string;
    items?: Item[];
    type?: string;
    product?: null;
}

export interface Item {
    count: number;
    name: string;
    value: string;
    active: boolean;
    slug: null;
    categoryType: null;
    __typename: ItemTypename;
}

export enum ItemTypename {
    ChoiceFilterItem = "ChoiceFilterItem",
}

export interface Results {
    totalCount: number;
    totalCountRelation: string;
    edges: Edge[];
    __typename: string;
}

export interface Edge {
    node: Node;
    __typename: EdgeTypename;
}

export enum EdgeTypename {
    ProductAndBundleEdge = "ProductAndBundleEdge",
}

export interface Node {
    shortId: string;
    name: string;
    slug: string;
    positionInTopSales: null;
    regions: Region[];
    cover: { [key: string]: string };
    coverMobile: { [key: string]: string };
    promotion: Promotion;
    isReleased: boolean;
    releasedAt: string;
    cheapestAuction: CheapestAuction | null;
    category: Category;
    platform: Platform;
    __typename: NodeTypename;
}

export enum NodeTypename {
    Product = "Product",
}

export enum Category {
    Digital = "DIGITAL",
}

export interface CheapestAuction {
    product: Product;
    isAddableToCart: boolean;
    isInStock: boolean;
    price: Price;
    isPreOrder: boolean;
    merchant: Merchant;
    discountLabelFromMsrp: null | string;
    msrp: Price | null;
    promotionalDiscountLabelFromMsrp: null;
    promotionalPrice: null;
    flags: any[];
    __typename: string;
}

export interface Merchant {
    slug: string;
    displayname: string;
    paymentAuthorizationTerm: AuthorizationTerm;
    deliveryAuthorizationTerm: AuthorizationTerm;
    __typename: string;
}

export interface AuthorizationTerm {
    value: DeliveryAuthorizationTermValue;
    __typename: DeliveryAuthorizationTermTypename;
}

export enum DeliveryAuthorizationTermTypename {
    DeliveryAuthorizationTermOption = "DeliveryAuthorizationTermOption",
    PaymentAuthorizationTermOption = "PaymentAuthorizationTermOption",
}

export enum DeliveryAuthorizationTermValue {
    Instant = "INSTANT",
}

export interface Price {
    amount: number;
    currency: Currency;
    __typename: PriceTypename;
}

export enum PriceTypename {
    Money = "Money",
}

export enum Currency {
    Usd = "USD",
}

export interface Product {
    slug: string;
    __typename: NodeTypename;
}

export interface Platform {
    label: Label;
    value: PlatformValue;
    __typename: PlatformTypename;
}

export enum PlatformTypename {
    PlatformEnumValue = "PlatformEnumValue",
}

export enum Label {
    Steam = "Steam",
    XboxLive = "Xbox Live",
}

export enum PlatformValue {
    Steam = "STEAM",
    Xbox = "XBOX",
}

export interface Promotion {
    available: boolean;
    __typename: PromotionTypename;
}

export enum PromotionTypename {
    ProductPromotion = "ProductPromotion",
}

export interface Extensions {
    headers: Headers;
    cache: Cache;
}

export interface Cache {
    version: number;
    hints: Hint[];
}

export interface Hint {
    path: string[];
    scope: string;
    maxAge: number;
}

export interface Headers {
    server: string[];
    "content-type": string[];
    "transfer-encoding": string[];
    connection: string[];
    "cache-control": string[];
    date: string[];
    "set-cookie": string[];
}
