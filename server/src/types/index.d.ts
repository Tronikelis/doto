declare module "fastify" {
    interface Session {
        user?: {
            id: string;
        };
    }
}

// Generated by https://quicktype.io
export interface AxiosGames {
    count: number;
    next: null | string;
    previous: null | string;
    results: Result[];
    user_platforms: boolean;
}

export interface Result {
    slug: string;
    name: string;
    playtime: number;
    platforms: Platform[];
    stores: Store[] | null;
    released: string;
    tba: boolean;
    background_image: string | null;
    rating: number;
    rating_top: number;
    ratings: Rating[];
    ratings_count: number;
    reviews_text_count: number;
    added: number;
    added_by_status: AddedByStatus | null;
    metacritic: number;
    suggestions_count: number;
    updated: string;
    id: number;
    score: null;
    clip: Clip | null;
    tags: Tag[];
    esrb_rating: EsrbRating | null;
    user_game: null;
    reviews_count: number;
    saturated_color: Color;
    dominant_color: Color;
    short_screenshots: ShortScreenshot[];
    parent_platforms: Platform[];
    genres: Genre[];
    community_rating?: number;
}

export interface AddedByStatus {
    yet?: number;
    owned: number;
    beaten?: number;
    toplay: number;
    dropped?: number;
    playing?: number;
}

export interface Clip {
    clip: string;
    clips: { [key: string]: string };
    video: string;
    preview: string;
}

export enum Color {
    The0F0F0F = "0f0f0f",
}

export interface EsrbRating {
    id: number;
    name: Name;
    slug: Slug;
    name_en: Name;
    name_ru: Name;
}

export enum Name {
    Everyone = "Everyone",
    Everyone10 = "Everyone 10+",
    Teen = "Teen",
}

export enum Slug {
    Everyone = "everyone",
    Everyone10Plus = "everyone-10-plus",
    Teen = "teen",
}

export interface Genre {
    id: number;
    name: string;
    slug: string;
}

export interface Platform {
    platform: Genre;
}

export interface Rating {
    id: number;
    title: Title;
    count: number;
    percent: number;
}

export enum Title {
    Exceptional = "exceptional",
    Meh = "meh",
    Recommended = "recommended",
    Skip = "skip",
}

export interface ShortScreenshot {
    id: number;
    image: string;
}

export interface Store {
    store: Genre;
}

export interface Tag {
    id: number;
    name: string;
    slug: string;
    language: Language;
    games_count: number;
    image_background: string;
}

export enum Language {
    Eng = "eng",
    Rus = "rus",
}

// Generated by https://quicktype.io
export interface GameStatusSearch {
    id: string;
    slug: string;
    title: string;
    is_AAA: boolean;
    protections: string;
    hacked_groups: string;
    release_date: string;
    crack_date: string;
    short_image: string;
    full_image: string;
    teaser_link: string;
    mata_score: number | null;
    user_score: number | null;
    readable_status: string;
    is_offline_act: boolean;
}

export interface Nuke {
    id: number;
    typeId: number;
    type: string;
    preId: number;
    reason: string;
    net: string;
    nukeAt: number;
}

// Generated by https://quicktype.io
export interface AxiosDenuvoUpdates {
    success: number;
    pagesize: string;
    total_count: number;
    start: string;
    results_html: string;
    rgFacets: string;
    bFiltering: boolean;
    apptypeoverride: string;
}

// Generated by https://quicktype.io
export interface AxiosGame {
    id: number;
    slug: string;
    name: string;
    name_original: string;
    description: string;
    metacritic: number;
    metacritic_platforms: MetacriticPlatform[];
    released: string;
    tba: boolean;
    updated: string;
    background_image: string;
    background_image_additional: string;
    website: string;
    rating: number;
    rating_top: number;
    ratings: Rating[];
    reactions: { [key: string]: number };
    added: number;
    added_by_status: AddedByStatus;
    playtime: number;
    screenshots_count: number;
    movies_count: number;
    creators_count: number;
    achievements_count: number;
    parent_achievements_count: number;
    reddit_url: string;
    reddit_name: string;
    reddit_description: string;
    reddit_logo: string;
    reddit_count: number;
    twitch_count: number;
    youtube_count: number;
    reviews_text_count: number;
    ratings_count: number;
    suggestions_count: number;
    alternative_names: any[];
    metacritic_url: string;
    parents_count: number;
    additions_count: number;
    game_series_count: number;
    user_game: null;
    reviews_count: number;
    saturated_color: string;
    dominant_color: string;
    parent_platforms: ParentPlatform[];
    platforms: PlatformElement[];
    stores: Store[];
    developers: Developer[];
    genres: Developer[];
    tags: Developer[];
    publishers: Developer[];
    esrb_rating: EsrbRating;
    clip: Clip;
    description_raw: string;
}

// Generated by https://quicktype.io

export interface AxiosGeolocate {
    ip: string;
    hostname: string;
    type: string;
    continent_code: string;
    continent_name: string;
    country_code: string;
    country_name: string;
    region_code: string;
    region_name: string;
    city: string;
    zip: string;
    latitude: number;
    longitude: number;
    location: Location;
    time_zone: TimeZone;
    currency: Currency;
    connection: Connection;
    security: Security;
}

export interface Connection {
    asn: number;
    isp: string;
}

export interface Currency {
    code: string;
    name: string;
    plural: string;
    symbol: string;
    symbol_native: string;
}

export interface Location {
    geoname_id: number;
    capital: string;
    languages: {
        code: string;
        name: string;
        native: string;
    }[];
    country_flag: string;
    country_flag_emoji: string;
    country_flag_emoji_unicode: string;
    calling_code: string;
    is_eu: boolean;
}

export interface Security {
    is_proxy: boolean;
    proxy_type: null;
    is_crawler: boolean;
    crawler_name: null;
    crawler_type: null;
    is_tor: boolean;
    threat_level: string;
    threat_types: null;
}

export interface TimeZone {
    id: string;
    current_time: string;
    gmt_offset: number;
    code: string;
    is_daylight_saving: boolean;
}
